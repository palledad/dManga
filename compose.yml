version: '3'
services:
  db:
    image: postgres:14.4-alpine3.16
    environment:
      POSTGRES_USER: root
      POSTGRES_PASSWORD: password
      POSTGRES_DB: d-manga
    ports:
      - "5432:5432"

  frontend:
    build: frontend
    ports:
      - "3000:3000"
    command: bash -c "pnpm install && pnpm dev"
    volumes:
      - type: bind
        source: ./frontend/
        target: /frontend/

  migrate:
    build:
      context: backend
      dockerfile: migration.Dockerfile
    command: bash -c "
      /scripts/wait-for-it.sh db:5432 --timeout=60 --strict &&
      migrate -database postgres://root:password@db:5432/d-manga?sslmode=disable -path=/migrations/ up"
    volumes:
      - type: bind
        source: ./backend/migrations
        target: /migrations/
    depends_on:
      - db

  backend:
    build: backend
    ports:
      - "8080:8080"
    command: bash -c " /scripts/wait-for-it.sh db:5432 --timeout=60 --strict && go run cmd/main.go"
    volumes:
      - type: bind
        source: ./backend
        target: /backend
      - type: bind
        source: ./openapi
        target: /openapi
    depends_on:
      - db
      - migrate

  swagger-ui:
    image: swaggerapi/swagger-ui
    ports:
      - "8081:8080"
    volumes:
      - ./openapi/openapi.yaml:/openapi.yaml
    environment:
      SWAGGER_JSON: /openapi.yaml

  openapi-generator:
    image: openapitools/openapi-generator-cli
    volumes:
      - ./openapi/openapi.yaml:/home/openapi.yaml
      - ./frontend/:/home/frontend/
      - ./backend/:/home/backend/
